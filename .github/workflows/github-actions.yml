name: CO-Walk CI/CD - Java CI with Gradle and CD with Docker & AWS EC2

on:
  push:
    branches: [ "Master" ]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
    # 소스코드 다운로드
    - name: Checkout code
      uses: actions/checkout@v3
    # JDK 세팅
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    # Gradle 캐싱
    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    # Firebase SDK 세팅
    - name: Set firebase-service-account.json
      run: |
        cd ./src/src/main/resources
        touch ./co-walk-firbase-service-account.json
        echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" >> ./co-walk-firbase-service-account.json
      shell: bash
    # Gradle 빌드
    - name: Build with Gradle
      run: ./src/gradlew bootJar
    # Spring 어플리케이션 Docker Image 빌드
    - name: Build Docker Image For Spring
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:1.0 ./src
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:1.0
    # 서버에서 Docker 이미지 실행
    - name: EC2 Docker Run
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          docker stop ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:1.0
          docker rm co-walk-spring
          docker rmi ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:1.0
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:1.0
          docker restart mongo
          docker run -d -p 80:8080 --network co-walk-network -e JASYPT_PASSWORD=-Djasypt.encryptor.password=${{ secrets.JASYPT_PASSWORD }} -e PROFILES=-Dspring.profiles.active=prod \
           --name co-walk-spring ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:1.0

